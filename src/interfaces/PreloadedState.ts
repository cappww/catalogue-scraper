// Generated by https://quicktype.io
//
// To change quicktype's target language, run command:
//
//   "Set quicktype target language"

export interface PreloadedState {
  baseReducer: BaseReducer;
  drugPage: DrugPage;
  brandPage: BrandPage;
  ayurvedaPage: AyurvedaPage;
  ugcForm: UgcForm;
  routing: Routing;
  user: User;
  search: Search;
  addToCart: AddToCart;
  sharedUser: SharedUser;
  reportError: ReportError;
}

export interface AddToCart {
  orderItems: any[];
  showAddingToCart: boolean;
  showAddedToCart: boolean;
  forceAddToCart: boolean;
  showToast: boolean;
  isShowInterstitialApp: boolean;
  isBuyingNow: boolean;
  isDisableForceAddToCart: boolean;
  atcErrorNotification: null;
  forceAddToCartDone: boolean;
  quantityRecommendation: null;
  substituteAdded: boolean;
  substituteAddedId: null;
}

export interface AyurvedaPage {
  ayurInfo: AyurInfo;
  ayurvedaNotFound: boolean;
  apiError: boolean;
  apiErrorCode: null;
  showFullIndex: boolean;
}

export interface AyurInfo {
  authoredBy: null;
  editorialPolicy: null;
  ayurData: AyurDatum[];
  indexData: IndexDatum[];
  metaData: MetaData;
  consultDoctor: null;
  schema: CityOffers;
  slug: string;
}

export interface AyurDatum {
  id: string;
  header: null | string;
  type: string;
  data?: AyurDatumDatum[];
  values?: any[];
}

export interface AyurDatumDatum {
  header?: null | string;
  type?: string;
  images?: DatumImage[];
  value?: string;
  id?: string;
  tag?: null;
  data?: DatumDatum[];
}

export interface DatumDatum {
  header: string;
  value: string;
}

export interface DatumImage {
  imgUrl: string;
  caption: string;
  imgType: string;
}

export interface IndexDatum {
  children: IndexDatum[];
  data: string;
  id: string;
}

export interface MetaData {
  heading: string;
  imageAltTag: string;
  imageTitleTag: string;
  metaDesc: string;
  metaKeyword: string;
  title: string;
}

export interface CityOffers {}

export interface BaseReducer {
  city: string;
  offers: BaseReducerOffers;
  cities: BaseReducerCities;
  citiesLab: CitiesLab;
  leaveIntentData: LeaveIntentData;
  userInfo: UserInfo;
  locationPopupVisible: boolean;
  isLoggedIn: boolean;
  clientIPAddress: string;
  email: string;
  selectedCity: string;
  isOTCReplicaSite: boolean;
  userDevice: string;
  metaData: null;
  dataLayerPage: string;
  languageMenuVisible: boolean;
  fromPage: string;
  cityOffers: CityOffers;
  isSidebarVisible: boolean;
  pageSlug: string;
  featureVisibility: Visibility;
  localeConstants: { [key: string]: string };
  availableLanguages: AvailableLanguages;
  cartPopUpData: any[];
  carePlanStatus: CarePlanStatus;
  showCarePlanStatus: boolean;
  showCartPopup: boolean;
  udpData: UDPDatum[];
  replicaInfo: ReplicaInfo;
  footerLinks: FooterLinks;
  footerImage: string;
  isAmp: boolean;
  visitorId: string;
  authPopupVisible: boolean;
  authPopupSource: null;
  authType: null;
  authRedirectionUrl: null;
  footerRevampData: CityOffers;
  sendDownloadLink: boolean;
  affiliateSource: string;
  corporateDetails: CityOffers;
  emailRequired: boolean;
  paymentStatusParam: string;
  upsell: null;
  drugUdpData: DrugUDPDatum[];
  loginTooltipFlag: boolean;
  leaveIntentDisabled: boolean;
  truecallerConflictData: CityOffers;
  abExperimentShow: boolean;
  abExpVisitorId: number;
  showPrescriptionWidget: boolean;
  showDrugLabWidget: boolean;
  showDrugAdditionalOffers: boolean;
  geolocation: boolean;
  showSearchLabWidget: boolean;
  showLeaveIntentPopup: boolean;
}

export interface AvailableLanguages {
  selectedLanguage: SelectedLanguage;
  languageList: SelectedLanguage[];
  showLocale: boolean;
}

export interface SelectedLanguage {
  id: string;
  displayText: string;
  url: string;
  selected: boolean;
  available: boolean;
  display_text?: string;
  slug?: string;
}

export interface CarePlanStatus {
  expiry: null;
  ga_label: string;
  redirect_url: string;
  renew: boolean;
  text: string;
  tag: string;
}

export interface BaseReducerCities {
  all_cities: string[];
  top_cities: string[];
}

export interface CitiesLab {
  serviceable_cities: string[];
}

export interface DrugUDPDatum {
  id: null;
  name: string;
  slug: string;
  level: number;
  children: any[];
}

export interface Visibility {
  tnc: string;
  isAffiliate: boolean;
  showAffiliatebanner: boolean;
  showAdminOptions: boolean;
  showOnlyPharmacy: boolean;
  showLabs: boolean;
  showCarePlan: boolean;
  showCovid: boolean;
  showVaccine: boolean;
  showConsult: boolean;
  showOnlyConsult: boolean;
  showUdp: boolean;
  showSeparator: boolean;
  affiliateHelp: boolean;
  affiliatelogo: boolean;
  showFooter: boolean;
  showCorporateHeader: boolean;
  affiliateCache: boolean;
  couponRemoveDisable: boolean;
  showAffiliateCarousel: boolean;
  showHomeCarousel: boolean;
  showUploadRx: boolean;
  showQuickBuy: boolean;
  showAffiliateCategories: boolean;
  showCarouselDots: boolean;
  showHomeContent: boolean;
  showArtwork: boolean;
  showAppInstallBar: boolean;
  showInterstitialAppWidget: boolean;
  showRelatedProducts: boolean;
  showRelatedDoctors: boolean;
  showHonCodeInfo: boolean;
  showArticles: boolean;
  showDrugBreadcrumbs: boolean;
  showOtcBreadcrumbs: boolean;
  showDiscounts: boolean;
  autoApplyCoupon: boolean;
  showOldHomePage: boolean;
  showUpsellMsg: boolean;
  showCashBack: boolean;
  showDrugInteraction: boolean;
  showQuickLinks: boolean;
  showLanguageBar: boolean;
  showAddAnotherCTA: boolean;
  showCartRecommendations: boolean;
  showAyurvedaPage: boolean;
  showAyurvedaLandingPage: boolean;
  showRelatedAyurveda: boolean;
  showLoginCoupon: boolean;
  showBestPrice: boolean;
  showAppDownloadWidget: boolean;
  showManufacturerName: boolean;
  showCartSomeCatalogueUrlCash: boolean;
  header: boolean;
  header__mobile: boolean;
  subheader: boolean;
  subheader__mobile: boolean;
  "header.navigationLinks": boolean;
  "header.profileNavigation.help": boolean;
  "header.profileNavigation.profile": boolean;
  "header.profileNavigation.cart": boolean;
  showStaticHomeFooter: null;
  hideAppInstallWidget: boolean;
  source: string;
  coupon: string;
}

export interface FooterLinks {
  signup_data: SignupData;
  connect_data: ConnectData;
  footer_sprite: FooterSprite;
  stats_data: StatsData;
  copyright_text: string;
  sections_links: SectionsLinks;
  platform_stats_order: PlatformStatsOrder;
  know_more_section: KnowMoreSection;
  trust_section: TrustSection[];
  legit_script: LegitScript;
  download_app: DownloadApp;
  header: string;
  domains_sections_order: DomainsSectionsOrder;
  sms_app_link: SMSAppLink;
  remoteIp: string;
}

export interface ConnectData {
  text: string;
  links: ConnectDataLinks;
  main_header: string;
}

export interface ConnectDataLinks {
  facebook: string;
  medium: string;
  youtube: string;
  linkedin: string;
  twitter: string;
}

export interface DomainsSectionsOrder {
  labs: string[];
  pharmacy: string[];
}

export interface DownloadApp {
  links: DownloadAppLinks;
  text: string;
}

export interface DownloadAppLinks {
  google_play: string;
  app_store: string;
}

export interface FooterSprite {
  desktop: string;
  mobile: string;
}

export interface KnowMoreSection {
  header: string;
  data: KnowMoreSectionDatum[];
}

export interface KnowMoreSectionDatum {
  header: string;
  description: string;
}

export interface LegitScript {
  icons: Icon[];
  text: string;
  iso_hover_text: string;
  legitscript_hover_text: string;
}

export interface Icon {
  url: string;
  icon: string;
  name: string;
}

export interface PlatformStatsOrder {
  desktop: string[];
  mobile: string[];
}

export interface SectionsLinks {
  pharmacy_services: KnowUs;
  labs_services: KnowUs;
  our_policies: KnowUs;
  know_us: KnowUs;
}

export interface KnowUs {
  links: Link[];
  header: string;
}

export interface Link {
  url: string;
  text: string;
}

export interface SignupData {
  cta: string;
  text: string;
}

export interface SMSAppLink {
  get_link_text: string;
  input_placeholder: string;
  country_code: string;
}

export interface StatsData {
  orders_delivered: OrdersDeliveredClass;
  cities: OrdersDeliveredClass;
  visitors: OrdersDeliveredClass;
}

export interface OrdersDeliveredClass {
  stat: FooterSprite;
  value: string;
}

export interface TrustSection {
  header: string;
  text: string;
}

export interface LeaveIntentData {
  header: string;
  metroCity: MetroCity[];
  nonMetroCity: MetroCity[];
}

export interface MetroCity {
  id: number;
  display_text: string;
  row_order: number;
  metro_city_enum: string;
  is_published: boolean;
  cta: MetroCityCta;
  offers: string[];
  icon_url: string;
  offer_type: string;
  coupon_code: string;
}

export interface MetroCityCta {
  enable: boolean;
  display_text: string;
  on_click_url: string;
}

export interface BaseReducerOffers {
  order_success_page: OrderSuccessPage;
  upload_rx: UploadRx;
  quick_buy_offer_text: string;
  footer_image: string;
  category_page_offer_text: string;
  sku_cashback: null;
  home_page_offer_text: string;
  coupon_detail: CouponDetail;
  allopathy_page_offer_text: null;
  sku_discount: null;
  rx_order_page_offer_text: string;
  otc_page_offer_text: string;
  udp_offer_text: string;
  lastUpdatedAt: number;
}

export interface CouponDetail {
  discount: string;
  cashback: string;
  coupon_code: null;
}

export interface OrderSuccessPage {
  mobile_image: string;
  on_click_link: string;
  desktop_image: string;
}

export interface UploadRx {
  mobile_web: Web;
  desktop_web: Web;
}

export interface Web {
  display_text: string;
  cta: string;
  header: string;
}

export interface ReplicaInfo {
  isReplicaSite: boolean;
  isOTCOnly: boolean;
  isLabsReplica: boolean;
  isInternationalSite: string;
}

export interface UDPDatum {
  parent: Parent;
  children: Parent[];
}

export interface Parent {
  slug: null | string;
  level: number;
  name: string;
}

export interface UserInfo {
  isLoggedIn: boolean;
  userName: string;
  isAdmin: boolean;
  isTelesales: boolean;
  isSuperLoggedIn: boolean;
  cashBalance: string;
  tcpPoints: string;
  isTcpPoints: boolean;
  openInNewTab: boolean;
  isMobile: boolean;
  locale: string;
  urls: { [key: string]: string };
}

export interface BrandPage {
  brandInfo: BrandInfo;
  orderItems: any[];
  brandNotFound: boolean;
  apiError: boolean;
  apiErrorCode: null;
  skuSiblingInfo: null;
  cartItemObject: CityOffers;
  isShowInstallApp: boolean;
  showVideoPop: boolean;
  showAddingToCart: boolean;
  showAddedToCart: boolean;
  isShowInterstitialApp: boolean;
  showToast: boolean;
}

export interface BrandInfo {
  brand: Brand;
  similarBrands: SimilarBrands;
  relatedArticles: RelatedArticles;
  metaData: CityOffers;
  tabs: any[];
  tabsUrl: any[];
  tabsHeader: any[];
  skus: Skus;
  toastMessage: string;
  schema: CityOffers;
  similarKeywords: string;
  appDownloadInterstitial: CityOffers;
}

export interface Brand {
  name: string;
  manufacturer: BrandManufacturer;
  shortComposition: PrimaryUses;
  primaryUses: PrimaryUses;
  composition: CompositionElement[];
  images: any[];
  slug: string;
  therapeuticClass: string;
  type: string;
}

export interface CompositionElement {
  natypeme: string;
  name: string;
  strength: string;
  uses: HowToTake;
  howToTake: HowToTake;
  mechanismOfAction: MissedDose;
  expertAdvice: MissedDose;
  sideEffects: SideEffects;
  faqs: Faqs;
  strengthValue: string;
  strengthUnit: string;
}

export interface MissedDose {
  header: string;
  displayText: string;
}

export interface Faqs {
  values: CityOffers[];
}

export interface HowToTake {
  header: string;
  iconUrl: string;
  displayText: string;
}

export interface SideEffects {
  header: string;
  iconUrl: string;
  values: SideEffectsValue[];
}

export interface SideEffectsValue {
  colorCode: null;
}

export interface BrandManufacturer {
  name: string;
  url: string;
}

export interface PrimaryUses {
  title: string;
  displayText: string;
}

export interface RelatedArticles {
  header: null | string;
  values: RelatedArticlesValue[];
}

export interface RelatedArticlesValue {
  question?: string;
  doctorImage?: string;
  doctorName?: string;
  doctorSpeciality?: string;
  answer?: string;
  slug?: null | string;
  id?: number;
  title?: string;
  bannerUrl?: string;
  permalink?: string;
  dicount?: Count;
  discount?: Count;
  guid?: string;
  image_url?: string;
  cropped_image_url?: string;
  name?: string;
  pack_size_label?: string;
  price?: number;
  type?: PurpleType;
  header?: string;
  display_text?: string;
  like_count?: number;
  thumbnail?: string;
  low?: string;
  medium?: string;
  high?: string;
  mediumhigh?: string;
  text?: string;
}

export interface Count {
  percent: null | string;
  price: number | null;
}

export enum PurpleType {
  Otc = "otc",
}

export interface SimilarBrands {
  title: string;
  brands: any[];
}

export interface Skus {
  title: string;
  skus: any[];
  inStock: InStock;
}

export interface InStock {
  actionLabel: string;
  colorCode: ColorCode | null;
  label: string;
  finalLabel: string;
  isBuyNow?: boolean;
}

export interface ColorCode {
  border: null;
  bgColor: null | string;
  label: null | string;
}

export interface DrugPage {
  drugInfo: DrugInfo;
  orderItems: any[];
  drugNotFound: boolean;
  drugIdNotValid: boolean;
  showBannedPopUp: boolean;
  apiError: boolean;
  apiErrorCode: null;
  skuSiblingInfo: null;
  cartItemObject: CityOffers;
  isShowInstallApp: boolean;
  showVideoPop: boolean;
  showAddingToCart: boolean;
  showAddedToCart: boolean;
  isShowInterstitialApp: boolean;
  isDisableForceAddToCart: boolean;
  showFullscreenImages: boolean;
  showToast: boolean;
  isBuyingNow: boolean;
  defaultImage: number;
  otcUpsellData: null;
  locationService: boolean;
  isLocaleRedirect: boolean;
  isLocaleUIChange: boolean;
  currentLocale: string;
  isOTCReplicaSite: boolean;
  visibility: Visibility;
  internationalSite: string;
  isInternationalSite: boolean;
}

export interface DrugInfo {
  etaInfo: EtaInfo;
  carePlanInfo: null;
  is_care_plan_member: boolean;
  sku: Sku;
  relatedSku: RelatedArticles;
  recentlyViewed: RelatedArticles;
  variantProducts: null;
  substituteProducts: null;
  relatedLabTest: null;
  relatedDoctor: null;
  relatedAyurveda: null;
  substitute: Substitute;
  substituteNavigationText: string;
  index: { [key: string]: string };
  consultDoctor: null;
  skuFactBox: RelatedArticles;
  canonicalSlug: string;
  socialUrl: SocialURL;
  variant: null;
  takeSurvey: TakeSurvey;
  ugc: Ugc;
  authoredBy: AuthoredBy;
  banners: Banner[];
  articles: RelatedArticles;
  footer: string;
  availableLanguages: AvailableLanguage[];
  showLessLocale: string;
  metaData: MetaData;
  schema: Schema;
  toastMessage: string;
  breadcrumbs: Breadcrumb[];
  adTags: Tag[];
  anonymousChat: RelatedArticles;
  appDownloadWidget: CityOffers;
  appDownloadInterstitial: CityOffers;
  editorialPolicy: EditorialPolicy;
  userActions: UserActions;
  moreText: string;
  lessText: string;
  prescriptionWidget: null;
  trustBadges: null;
  isFdc: boolean;
  upsell: Upsell;
  vas_params_token: string;
  origin_info: CityOffers;
  care_plan_info_v2: CarePlanInfoV2;
  active_care_plan_member: boolean;
  knowMoreSubstituteData: KnowMoreSubstituteData;
  substitutes_backdrop: null;
  nothingHere: boolean;
  substitutes_cta_on_search: boolean;
  substitutes_ga_values: SubstitutesGaValues;
  showSubstituteProducts: null;
  showVariantProducts: null;
}

export interface Tag {
  key: string;
  value: boolean | number | string;
}

export interface AuthoredBy {
  header: string;
  authors: AuthoredByAuthor[];
  lastUpdated: LastUpdated;
}

export interface AuthoredByAuthor {
  role: string;
  name: string;
  profileUrl: string;
  imageUrl: string;
  qualifications: string;
}

export interface LastUpdated {
  subHeading: string;
  lastUpdatedValue: string;
}

export interface AvailableLanguage {
  id: string;
  displayText: string;
  url: string;
  selected: boolean;
}

export interface Banner {
  id: number;
  image: null;
  hover_text: null;
  alt_text: null;
  on_click_link: null;
  type: string;
  platform: string;
  position: number;
  dfp_id: string;
  offer_text: null;
  network_id: string;
  cluster_ids: number[];
  resolution: number[];
  page: string;
  page_position: string;
  platform_type: string;
  fallback_image: string;
  tags: Tag[];
}

export interface Breadcrumb {
  name: string;
  slug: string;
  id?: number;
}

export interface CarePlanInfoV2 {
  selected_type: string;
  is_enabled: boolean;
  data: CarePlanInfoV2Datum[];
  disclaimer: string;
  care_plan_sku_id: number;
  is_widget_sticky: boolean;
  ga_event_label: string;
}

export interface CarePlanInfoV2Datum {
  view_type: string;
  is_enabled: boolean;
  discount: Discount;
  mrp: Mrp | null;
}

export interface Discount {
  price: number;
  is_striked: boolean;
  discount_percent: number | null;
  display_text: string;
  care_plan_logo?: CarePlanLogo;
  tooltip_data?: TooltipData;
}

export interface CarePlanLogo {
  icon: string;
  post_text: string;
}

export interface TooltipData {
  text: string;
  cta: TooltipDataCta;
}

export interface TooltipDataCta {
  text: string;
  redirect_url: string;
}

export interface Mrp {
  price: number;
  is_striked: boolean;
}

export interface EditorialPolicy {
  readPolicyLink: string;
  authoredBy: string;
  readPolicyText: string;
  imgUrl: string;
}

export interface EtaInfo {
  display_text: string;
  algorithm_type: null;
  is_visible: boolean;
  ga_event_type: string;
  delivery_dates: null;
  is_widget_sticky: boolean;
  sub_header: null;
  header: string;
  sku_available: boolean;
  overdue_reason: string;
}

export interface KnowMoreSubstituteData {
  properties: Properties;
  substitutes_info: SubstitutesInfo;
  prescription_info: PrescriptionInfo;
  introduction: Introduction;
  features: Features;
  image_widget: ImageWidget;
  sample_prescription: PrescriptionInfo;
  skus: null;
  substituteIntro: SubstituteIntro;
  listOfFeatures: ListOfFeatures;
  imageWidgetData: string;
  substituteBuyingRules: SubstituteBuyingRules;
  gettingValidPrescriptionInfo: GettingValidPrescriptionInfo;
  samplePrescriptionData: SamplePrescriptionData;
}

export interface Features {
  header: string;
  sub_header: string;
  data: Use[];
}

export interface Use {
  image?: string;
  header: string;
  sub_header: string;
  display_text: string;
  values?: UseValue[];
}

export interface UseValue {
  name: string;
  prefix: string;
  url: null;
}

export interface GettingValidPrescriptionInfo {
  heading: string;
  subHeading: string;
  steps?: GettingValidPrescriptionInfo[];
  ctaLabel: null | string;
  imageUrl?: string;
  iconUrl?: string;
}

export interface ImageWidget {
  resolution: Resolution;
  data: ImageWidgetDatum[];
}

export interface ImageWidgetDatum {
  image: string;
  on_click_link: string;
}

export interface Resolution {
  width: number;
  height: number;
}

export interface Introduction {
  header: string;
  sub_header: string;
  data: IntroductionDatum[];
  composition: IntroductionComposition;
  display_text: string;
  cta: IntroductionCta;
}

export interface IntroductionComposition {
  header: string;
  sub_header: string;
}

export interface IntroductionCta {
  text: string;
  icon?: null | string;
}

export interface IntroductionDatum {
  icon: string;
  display_text: string;
}

export interface ListOfFeatures {
  heading: string;
  variant: string;
  features: Feature[];
}

export interface Feature {
  heading: string;
  information: string;
  image: string;
}

export interface PrescriptionInfo {
  header: string;
  sub_header: string;
  data?: PrescriptionInfo[];
  cta?: IntroductionCta | null;
  icon?: string;
  image?: string;
}

export interface Properties {
  header: string;
  data: IntroductionDatum[];
}

export interface SamplePrescriptionData {
  header: string;
  ctaLabel: string;
  samples: Sample[];
}

export interface Sample {
  imageUrl: string;
  header: string;
  subHeader: string;
}

export interface SubstituteBuyingRules {
  heading: string;
  steps: GettingValidPrescriptionInfo[];
}

export interface SubstituteIntro {
  header: string;
  subHeader: string;
  ctaLabel: string;
  ctaIcon: string;
  data: SubstituteIntroDatum[];
  displayText: string;
  composition: SubstituteIntroComposition;
}

export interface SubstituteIntroComposition {
  header: string;
  subHeader: string;
}

export interface SubstituteIntroDatum {
  icon: string;
  displayText: string;
}

export interface SubstitutesInfo {
  header: string;
  sub_header: string;
  data: PrescriptionInfo[];
}

export interface Schema {
  author: SchemaAuthor[];
  question: Question;
  drugs: Drugs;
}

export interface SchemaAuthor {
  "@type": string;
  givenName: string;
  jobTitle: string;
}

export interface Drugs {
  "@context": string;
  "@type": string;
  url: string;
  mainEntityOfPage: string;
  prescriptionStatus: string;
  drugUnit: string;
  activeIngredient: string;
  alcoholWarning: string;
  breastfeedingWarning: string;
  foodWarning: null;
  pregnancyWarning: string;
  manufacturer: DrugsManufacturer;
  interactingDrug: null;
  administrationRoute: string;
  isAvailableGenerically: boolean;
  isProprietary: boolean;
  nonProprietaryName: string;
  dosageForm: string;
  description: string;
  name: string;
  proprietaryName: string;
  availableStrength: AvailableStrength[];
  mechanismOfAction: string[];
  doseSchedule: DoseSchedule;
  image: string;
}

export interface AvailableStrength {
  "@type": string;
  activeIngredient: string;
  strengthUnit: string;
  strengthValue: string;
}

export interface DoseSchedule {
  "@type": string;
  doseUnit: string;
  doseValue: string;
  frequency: string;
}

export interface DrugsManufacturer {
  "@type": string;
  legalName: string;
}

export interface Question {
  "@context": string;
  "@type": string;
  mainEntity: MainEntity[];
}

export interface MainEntity {
  "@context": string;
  "@type": string;
  acceptedAnswer: AcceptedAnswer;
  name: string;
}

export interface AcceptedAnswer {
  "@type": string;
  text: string;
}

export interface Sku {
  manufacturer: SkuManufacturer;
  name: string;
  perUnitPrice: string;
  prescriptionRequired: PrescriptionRequired;
  price: number;
  discountedPrice: null;
  quantities: Quantity[];
  tax_inclusion_text: string;
  min_quantity_info: null;
  quantityProduct: string;
  shortComposition: MissedDose;
  synonym: null;
  storageCondition: StorageCondition;
  preservative: null;
  warning: Warning;
  drugInteraction: null;
  missedDose: MissedDose;
  unavailabilityReason: null;
  outOfStock: null;
  notifyMe: null;
  inStock: InStock;
  slug: string;
  id: number;
  saltIds: number[];
  therapeuticClass: string;
  type: string;
  videoData: VideoDatum[];
  specifications: Specification[];
  discountPercent: null;
  images: SkuImage[];
  newImages: RelatedArticles;
  youtubeVideo: YoutubeVideo;
  bestPrice: BestPrice;
  uses: Use[];
  howToTake: StorageCondition[];
  mechanismOfAction: StorageCondition[];
  expertAdvice: StorageCondition[];
  sideEffects: SideEffect[];
  copeUpStrategies: null[];
  faqs: RelatedArticles[];
  vendors: string;
  socialCue: SocialCue;
  references: References;
  introduction: StorageCondition[];
  offers: SkuOffers;
  benefits: RelatedArticles[];
  informationalPurposeText: null;
  substitutes_footer: null;
}

export interface BestPrice {
  bestPrice: string;
  discountPercent: string;
  couponCode: string;
  displayText: string;
}

export interface StorageCondition {
  header: string;
  display_text: string;
}

export interface SkuImage {
  thumbnail: string;
  low: string;
  medium: string;
  high: string;
  mediumhigh: string;
}

export interface SkuManufacturer {
  header: string;
  id: number;
  url: string;
  address: string;
  name: string;
  addressHeader: string;
}

export interface SkuOffers {
  header: string;
  values: string[];
  offerIcon: string;
  showMoreIcon: string;
  showLessIcon: string;
}

export interface PrescriptionRequired {
  header: string;
  iconUrl: string;
}

export interface Quantity {
  value: string;
  displayText: string;
  quantity: number;
}

export interface References {
  header: string;
  data: ReferencesDatum[];
  follow: boolean;
  icon_url: string;
}

export interface ReferencesDatum {
  url: string;
  data: string;
}

export interface SideEffect {
  header: string;
  text: string;
  values: SideEffectValue[];
}

export interface SideEffectValue {
  label: string;
  header: string;
  display_text: string;
  values: string[];
  color_code: ColorCodeClass;
}

export interface ColorCodeClass {
  label: string;
  border: string;
  bg_color: string;
}

export interface SocialCue {
  displayText: string;
  type: string;
}

export interface Specification {
  color_code: ColorCodeClass;
  display_text: string;
}

export interface VideoDatum {
  text: null | string;
  bgImage: string;
}

export interface Warning {
  header: string;
  description: null;
  values: WarningValue[];
}

export interface WarningValue {
  colorCode: ColorCode;
  label: null | string;
  description: string;
  displayText: string;
  iconUrl: string;
}

export interface YoutubeVideo {
  id: string;
}

export interface SocialURL {
  heading: string;
  data: SocialURLDatum[];
}

export interface SocialURLDatum {
  image_url: string;
  icon_type: string;
  alternate_text: string;
  url: string;
}

export interface Substitute {
  header: string;
  values: SubstituteValue[];
  viewAll: ViewAll;
  currentValue: CurrentValue;
  subText: string;
}

export interface CurrentValue {
  name: string;
  perUnitPrice: string;
}

export interface SubstituteValue {
  id: number;
  name: string;
  manufacturer: ValueManufacturer;
  perUnitPrice: string;
  savings: Savings;
  url: string;
  isInnovator: null;
}

export interface ValueManufacturer {
  address: string;
  name: string;
  id: number;
  slug: string;
  header: string;
  manufacturer_header: string;
}

export interface Savings {
  color: string;
  text: string;
}

export interface ViewAll {
  header: string;
  slug: string;
}

export interface SubstitutesGaValues {
  formulary_present: boolean;
  substitute_widget: boolean;
  pack_size_widget: boolean;
  similar_widget: boolean;
  variant_widget: boolean;
}

export interface TakeSurvey {
  disclaimer: string;
  helpText: string;
  cta: string;
  buttonSubtext: string;
}

export interface Ugc {
  header: string;
  surveyCount: number;
  values: UgcValue[];
}

export interface UgcValue {
  values: ValueValue[];
  header: string;
  type: FluffyType;
}

export enum FluffyType {
  Bar = "bar",
}

export interface ValueValue {
  text: string;
  values: string;
  valuePosition: ValuePosition;
  color: Color;
  type: FluffyType;
  order?: number;
}

export enum Color {
  The913D36 = "#913D36",
}

export enum ValuePosition {
  Right = "right",
}

export interface Upsell {
  type: string;
  data: null;
}

export interface UserActions {
  share: string;
  listen: string;
}

export interface ReportError {
  reportErrorFailure: boolean;
  reportErrorSuccess: boolean;
}

export interface Routing {
  locationBeforeTransitions: LocationBeforeTransitions;
}

export interface LocationBeforeTransitions {
  pathname: string;
  search: string;
  hash: string;
  action: string;
  key: null;
  basename: string;
}

export interface Search {
  searchTerm: string;
  searchResults: any[];
  searchResultsRx: any[];
  suggestions: any[];
  termLastChanged: number;
  recentResults: any[];
  emptyPlaceholderVisibilty: boolean;
  fromDidYouMean: FromDidYouMean;
}

export interface FromDidYouMean {
  isFromDidYouMean: boolean;
  source: string;
}

export interface SharedUser {
  data: SharedUserData;
  signup: Signup;
  login: Login;
  corporate: Corporate;
  forgotPassword: ForgotPassword;
}

export interface Corporate {
  data: CorporateData;
}

export interface CorporateData {
  corporateData: null;
}

export interface SharedUserData {
  authType: string;
  phoneNumber: string;
  email: string;
  isOtpFetched: boolean;
  numberScreenOtp: boolean;
  emailConflictOtp: boolean;
  isEmailRequired: boolean;
  isOtpRequired: boolean;
  error: Error;
  username: string;
  isLoading: boolean;
  authSuccessTitle: string;
  authSuccessMessage: string;
  otpSendMessage: null;
  changePasswordMessage: null;
  isExistingUser: boolean;
  popupFlag: boolean;
  bottomSheetFlag: boolean;
  bottomSheetData: null;
  emailErrorFlag: boolean;
  emailOptionsData: null;
  knowMorePopupFlag: null;
  knowMoreData: null;
  phoneOptionsData: null;
  conflictedEmail: string;
  isConflictingFlag: boolean;
}

export interface Error {
  type: string;
  message: string;
  heading: string;
  ctaText: string;
  ctaType: string;
}

export interface ForgotPassword {
  data: ForgotPasswordData;
}

export interface ForgotPasswordData {
  isHealthCarePro: boolean;
  showResetPassword: boolean;
  loginType: string;
  resetPasswordEmail: string;
  outhToken: string;
}

export interface Login {
  data: LoginData;
}

export interface LoginData {
  loginType: string;
  email: string;
  loginInitiator: string;
  isPhoneRequired: boolean;
  verifyPhoneOtpSend: boolean;
  forceReload: boolean;
  phoneRequiredStepData: null;
}

export interface Signup {
  data: SignupDataClass;
}

export interface SignupDataClass {
  isHealthCarePro: boolean;
  signupData: null;
}

export interface UgcForm {
  ugcQuestionData: CityOffers;
  ugcError: any[];
  selectedRadioApiOptionId: string;
  seachAutocompleteValue: string;
  searchAnswerData: any[];
  isShowNoResults: boolean;
  ugcFreeText: string;
  ugcResponseArray: any[];
  autocompleteArray: any[];
  showThankYou: boolean;
  thankYouMessage: string;
  ugcRatingValue: number;
  isUgcPresent: boolean;
  clientIPAddress: string;
  visitorId: string;
}

export interface User {
  isLoggedIn: boolean;
  isPhoneNumberLinked: boolean;
  isOTPSent: boolean;
  isShowOTPPopup: boolean;
  isShowLoginForm: boolean;
  email: string;
  name: string;
  loginErrors: any[];
  isMobileUser: boolean;
  isGettingUserInfo: boolean;
  userFromMerchant: boolean;
  merchantUserLogin: boolean;
  merchantUserAssociated: boolean;
  merchantHashValidated: boolean;
  isPremiumUser: null;
  userMerchantName: string;
  userMerchantId: string;
  initConsultError: any[];
}
